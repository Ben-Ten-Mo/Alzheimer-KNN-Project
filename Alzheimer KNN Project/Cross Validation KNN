{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","\n","#read in the data using pandas\n","df = pd.read_csv('alzheimer.csv')\n","df = df.drop(['SES','CDR'],axis=1)\n","df = df[df.Group != 'Converted']\n","mapping_MF = {'M': 0, 'F': 1}\n","df = df.replace({ 'M/F': mapping_MF})\n","df = df.dropna()\n","\n","#check data has been read in properly\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xAhwP_8PU-qz","executionInfo":{"status":"ok","timestamp":1678641109877,"user_tz":240,"elapsed":444,"user":{"displayName":"Kevin Sun _ Student - EnloeHS","userId":"08668725478260429321"}},"outputId":"dd64feb4-c554-4ea8-f1d9-af29848f65ea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Group  M/F  Age  EDUC  MMSE  eTIV   nWBV    ASF\n","0  Nondemented    0   87    14  27.0  1987  0.696  0.883\n","1  Nondemented    0   88    14  30.0  2004  0.681  0.876\n","2     Demented    0   75    12  23.0  1678  0.736  1.046\n","3     Demented    0   76    12  28.0  1738  0.713  1.010\n","4     Demented    0   80    12  22.0  1698  0.701  1.034"],"text/html":["\n","  <div id=\"df-131a7740-3dea-46b4-98d2-9be38815aa60\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Group</th>\n","      <th>M/F</th>\n","      <th>Age</th>\n","      <th>EDUC</th>\n","      <th>MMSE</th>\n","      <th>eTIV</th>\n","      <th>nWBV</th>\n","      <th>ASF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Nondemented</td>\n","      <td>0</td>\n","      <td>87</td>\n","      <td>14</td>\n","      <td>27.0</td>\n","      <td>1987</td>\n","      <td>0.696</td>\n","      <td>0.883</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Nondemented</td>\n","      <td>0</td>\n","      <td>88</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>2004</td>\n","      <td>0.681</td>\n","      <td>0.876</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Demented</td>\n","      <td>0</td>\n","      <td>75</td>\n","      <td>12</td>\n","      <td>23.0</td>\n","      <td>1678</td>\n","      <td>0.736</td>\n","      <td>1.046</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Demented</td>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>12</td>\n","      <td>28.0</td>\n","      <td>1738</td>\n","      <td>0.713</td>\n","      <td>1.010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Demented</td>\n","      <td>0</td>\n","      <td>80</td>\n","      <td>12</td>\n","      <td>22.0</td>\n","      <td>1698</td>\n","      <td>0.701</td>\n","      <td>1.034</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-131a7740-3dea-46b4-98d2-9be38815aa60')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-131a7740-3dea-46b4-98d2-9be38815aa60 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-131a7740-3dea-46b4-98d2-9be38815aa60');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["#check number of rows and columns in dataset\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"onJ5rxJPVFUf","executionInfo":{"status":"ok","timestamp":1678641120124,"user_tz":240,"elapsed":746,"user":{"displayName":"Kevin Sun _ Student - EnloeHS","userId":"08668725478260429321"}},"outputId":"655a9f14-a6ac-4f2f-c716-661e5203a303"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(334, 8)"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["#create a dataframe with all training data except the target column\n","X = df.drop(columns=['Group'])\n","\n","#check that the target variable has been removed\n","X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Pn7NUWaTVHY7","executionInfo":{"status":"ok","timestamp":1678641125020,"user_tz":240,"elapsed":109,"user":{"displayName":"Kevin Sun _ Student - EnloeHS","userId":"08668725478260429321"}},"outputId":"6b5ce7e8-7073-4478-fb3c-81aedf263a03"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   M/F  Age  EDUC  MMSE  eTIV   nWBV    ASF\n","0    0   87    14  27.0  1987  0.696  0.883\n","1    0   88    14  30.0  2004  0.681  0.876\n","2    0   75    12  23.0  1678  0.736  1.046\n","3    0   76    12  28.0  1738  0.713  1.010\n","4    0   80    12  22.0  1698  0.701  1.034"],"text/html":["\n","  <div id=\"df-6eac840f-6524-46d7-88a4-ab7251126a59\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>M/F</th>\n","      <th>Age</th>\n","      <th>EDUC</th>\n","      <th>MMSE</th>\n","      <th>eTIV</th>\n","      <th>nWBV</th>\n","      <th>ASF</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>87</td>\n","      <td>14</td>\n","      <td>27.0</td>\n","      <td>1987</td>\n","      <td>0.696</td>\n","      <td>0.883</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>88</td>\n","      <td>14</td>\n","      <td>30.0</td>\n","      <td>2004</td>\n","      <td>0.681</td>\n","      <td>0.876</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>75</td>\n","      <td>12</td>\n","      <td>23.0</td>\n","      <td>1678</td>\n","      <td>0.736</td>\n","      <td>1.046</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>12</td>\n","      <td>28.0</td>\n","      <td>1738</td>\n","      <td>0.713</td>\n","      <td>1.010</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>80</td>\n","      <td>12</td>\n","      <td>22.0</td>\n","      <td>1698</td>\n","      <td>0.701</td>\n","      <td>1.034</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6eac840f-6524-46d7-88a4-ab7251126a59')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6eac840f-6524-46d7-88a4-ab7251126a59 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6eac840f-6524-46d7-88a4-ab7251126a59');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#separate target values\n","y = df['Group'].values\n","\n","#view target values\n","y[0:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xWUixfjYVKvh","executionInfo":{"status":"ok","timestamp":1678641135368,"user_tz":240,"elapsed":105,"user":{"displayName":"Kevin Sun _ Student - EnloeHS","userId":"08668725478260429321"}},"outputId":"d1ffb5d6-94b2-4b0a-f030-a32f336bf37d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Nondemented', 'Nondemented', 'Demented', 'Demented', 'Demented'],\n","      dtype=object)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","#split dataset into train and test data\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=1, stratify=y)\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","# Create KNN classifier\n","knn = KNeighborsClassifier(n_neighbors = 2)\n","\n","# Fit the classifier to the data\n","knn.fit(X_train,y_train)\n","\n","knn.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_73TuNxfVcFL","executionInfo":{"status":"ok","timestamp":1678668084286,"user_tz":240,"elapsed":128,"user":{"displayName":"Benjamin Wang _ Student - EnloeHS","userId":"01527777632711439078"}},"outputId":"3a09c3e5-c3bc-4306-92d0-4edfa3b7c545"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6417910447761194"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["#show first 5 model predictions on the test data\n","knn.predict(X_test)[0:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G34KL7yWVoio","executionInfo":{"status":"ok","timestamp":1678667790456,"user_tz":240,"elapsed":122,"user":{"displayName":"Benjamin Wang _ Student - EnloeHS","userId":"01527777632711439078"}},"outputId":"3658405b-e5b5-400b-c155-c97b926646aa"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Demented', 'Nondemented', 'Demented', 'Demented', 'Nondemented'],\n","      dtype=object)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["#check accuracy of our model on the test data\n","knn.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KHn7DCkgVsUi","executionInfo":{"status":"ok","timestamp":1678667791440,"user_tz":240,"elapsed":119,"user":{"displayName":"Benjamin Wang _ Student - EnloeHS","userId":"01527777632711439078"}},"outputId":"21cfd46f-4bb7-4ba0-fb1e-d471da7daf0f"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6417910447761194"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["from sklearn.model_selection import cross_val_score\n","import numpy as np\n","\n","#create a new KNN model\n","knn_cv = KNeighborsClassifier(n_neighbors=2)\n","\n","#train model with cv of 5 \n","cv_scores = cross_val_score(knn_cv, X, y, cv=5)\n","\n","#print each cv score (accuracy) and average them\n","print(cv_scores)\n","print('cv_scores mean:{}'.format(np.mean(cv_scores)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tovgqzsLVuyJ","executionInfo":{"status":"ok","timestamp":1678666319509,"user_tz":240,"elapsed":5,"user":{"displayName":"Benjamin Wang _ Student - EnloeHS","userId":"01527777632711439078"}},"outputId":"0ccbdfd6-ce6a-4349-9a9b-5f828f8aaefc"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.53731343 0.55223881 0.62686567 0.6119403  0.54545455]\n","cv_scores mean:0.5747625508819538\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","\n","#create new a knn model\n","knn2 = KNeighborsClassifier()\n","\n","#create a dictionary of all values we want to test for n_neighbors\n","param_grid = {'n_neighbors': np.arange(1, 25)}\n","\n","#use gridsearch to test all values for n_neighbors\n","knn_gscv = GridSearchCV(knn2, param_grid, cv=5)\n","\n","#fit model to data\n","knn_gscv.fit(X, y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":118},"id":"hn6n5XQCWCo3","executionInfo":{"status":"ok","timestamp":1678641190497,"user_tz":240,"elapsed":1592,"user":{"displayName":"Kevin Sun _ Student - EnloeHS","userId":"08668725478260429321"}},"outputId":"c877f023-06a1-4925-b53b-18162bed929b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=5, estimator=KNeighborsClassifier(),\n","             param_grid={'n_neighbors': array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n","       18, 19, 20, 21, 22, 23, 24])})"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=KNeighborsClassifier(),\n","             param_grid={&#x27;n_neighbors&#x27;: array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n","       18, 19, 20, 21, 22, 23, 24])})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=KNeighborsClassifier(),\n","             param_grid={&#x27;n_neighbors&#x27;: array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n","       18, 19, 20, 21, 22, 23, 24])})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["#check top performing n_neighbors value\n","knn_gscv.best_params_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3GE0-ZmIWE5e","executionInfo":{"status":"ok","timestamp":1678641195549,"user_tz":240,"elapsed":115,"user":{"displayName":"Kevin Sun _ Student - EnloeHS","userId":"08668725478260429321"}},"outputId":"02694fbb-160e-4f70-a3a0-1f475fbbd3c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'n_neighbors': 5}"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["#check mean score for the \n","#top performing value of n_neighbors\n","knn_gscv.best_score_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FQXiairHWHjd","executionInfo":{"status":"ok","timestamp":1678641197837,"user_tz":240,"elapsed":125,"user":{"displayName":"Kevin Sun _ Student - EnloeHS","userId":"08668725478260429321"}},"outputId":"64189541-09d0-4dd3-81f4-0a73f08f572c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5926729986431478"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["import pandas as pd\n","\n","#read in the data using pandas\n","df = pd.read_csv('alzheimer.csv')\n","df = df.drop(['SES','CDR'],axis=1)\n","df = df[df.Group != 'Converted']\n","mapping_MF = {'M': 0, 'F': 1}\n","df = df.replace({ 'M/F': mapping_MF})\n","df = df.dropna()\n","\n","#check data has been read in properly\n","df.head()\n","\n","#check number of rows and columns in dataset\n","df.shape\n","\n","#create a dataframe with all training data except the target column\n","X = df.drop(columns=['Group'])\n","\n","#check that the target variable has been removed\n","X.head()\n","\n","y = df['Group'].values\n","\n","from sklearn.model_selection import train_test_split\n","\n","#split dataset into train and test data\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state=1, stratify=y)\n","\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","# Create KNN classifier\n","knn = KNeighborsClassifier(n_neighbors = 2)\n","\n","# Fit the classifier to the data\n","knn.fit(X_train,y_train)\n","\n","#show first 5 model predictions on the test data\n","knn.predict(X_test)[0:5]\n","\n","#check accuracy of our model on the test data\n","knn.score(X_test, y_test)\n","\n","from sklearn.model_selection import cross_val_score\n","import numpy as np\n","\n","#create a new KNN model\n","knn_cv = KNeighborsClassifier(n_neighbors=2)\n","\n","#train model with cv of 5 \n","cv_scores = cross_val_score(knn_cv, X, y, cv=5)\n","\n","#print each cv score (accuracy) and average them\n","print(cv_scores)\n","print('cv_scores mean:{}'.format(np.mean(cv_scores)))\n","\n","from sklearn.model_selection import GridSearchCV\n","\n","#create new a knn model\n","knn2 = KNeighborsClassifier()\n","\n","#create a dictionary of all values we want to test for n_neighbors\n","param_grid = {'n_neighbors': np.arange(1, 25)}\n","\n","#use gridsearch to test all values for n_neighbors\n","knn_gscv = GridSearchCV(knn2, param_grid, cv=5)\n","\n","#fit model to data\n","knn_gscv.fit(X, y)\n","\n","#check top performing n_neighbors value\n","knn_gscv.best_params_\n","print(knn_gscv.nest_params_)\n","#check mean score for the top performing value of n_neighbors\n","knn_gscv.best_score_\n","print(knn_gscv.best_score_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YErZ_VmeXlPT","executionInfo":{"status":"ok","timestamp":1678664568862,"user_tz":240,"elapsed":924,"user":{"displayName":"Benjamin Wang _ Student - EnloeHS","userId":"01527777632711439078"}},"outputId":"982da30e-df3c-4c2b-b7f9-80d36e1f1d63"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.53731343 0.59701493 0.59701493 0.55223881 0.51515152]\n","cv_scores mean:0.5597467209407507\n","[ 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24]\n"]},{"output_type":"execute_result","data":{"text/plain":["0.5926729986431478"]},"metadata":{},"execution_count":7}]}]}